package clientProject;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;

import javax.swing.*;

public class UserListPane extends JPanel implements UserStatusListener{
	private chatClient client;
	private JList<String> userListUI;
	private DefaultListModel<String> userListModel;
	
	public UserListPane(chatClient client) {
		this.client = client;
		this.client.addUserStatusListener(this);
		
		userListModel = new DefaultListModel<>();
		userListUI = new JList<>(userListModel);
		setLayout(new BorderLayout());
		add(new JScrollPane(userListUI), BorderLayout.CENTER);
		
		userListUI.addMouseListener(new MouseAdapter(){
			@Override
			public void mouseClicked(MouseEvent e) {
				if(e.getClickCount() > 1) {
					String login = userListUI.getSelectedValue();
					MessagePane messagePane = new MessagePane(client, login);
					
					JFrame f = new JFrame("Message " + login);
					//f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

					
					f.getContentPane().setLayout(new BoxLayout(f.getContentPane(),BoxLayout.Y_AXIS));
					f.setTitle("chatMate");
					f.setLayout(new FlowLayout());
					f.setSize(500, 500);
					f.setResizable(false);
					f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
					f.setLocationRelativeTo(null);
					
					f.getContentPane().add(messagePane, BorderLayout.CENTER);
					JButton logOff = new JButton("Log Off");
					f.add(logOff);
					
					f.setVisible(true);
					
				}
			}
			
		});
	}

	public static void main(String[] args) {
		 chatClient client = new chatClient("localhost", 8818);
		 
		 UserListPane userListPane = new UserListPane(client);
		 JFrame frame = new JFrame("User List");
		 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		 frame.setSize(400, 400);
		 
		 frame.getContentPane().add(userListPane, BorderLayout.CENTER);
		 frame.setVisible(true);
		 
		 if(client.connect()) {
			 try {
				 client.login("guest", "guest");
			 }catch(IOException e) {
				 e.printStackTrace();

			 }
		 } 
	}
	
	@Override
	public void online(String login) {
		userListModel.addElement(login);
	}
	
	@Override
	public void offline(String login) {
		userListModel.removeElement(login);
	}
	
}
